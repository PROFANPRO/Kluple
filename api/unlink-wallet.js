// /pages/api/unlink-wallet.js
import { createClient } from "@supabase/supabase-js";

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY // ‚úÖ –ª—É—á—à–µ service_role –∫–ª—é—á
);

export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è" });
  }

  const { userId, wallet } = req.body;

  if (!userId || !wallet) {
    return res.status(400).json({ error: "–ù–µ —É–∫–∞–∑–∞–Ω userId –∏–ª–∏ wallet" });
  }

  try {
    // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã wallet_links
    const { error } = await supabase
      .from("wallet_links")
      .delete()
      .match({ user_id: userId, wallet }); // ‚úÖ –∏—Å–ø–æ–ª—å–∑—É–µ–º user_id

    if (error) {
      console.error("Supabase unlink error:", error);
      return res.status(500).json({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤—è–∑–∫–µ –∫–æ—à–µ–ª—å–∫–∞" });
    }

    console.log(`üîì –ö–æ—à–µ–ª—ë–∫ ${wallet} –æ—Ç–≤—è–∑–∞–Ω –æ—Ç userId ${userId}`);
    return res.status(200).json({ success: true, message: "–ö–æ—à–µ–ª—ë–∫ –æ—Ç–≤—è–∑–∞–Ω" });
  } catch (err) {
    console.error("unlink-wallet error:", err);
    return res.status(500).json({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤—è–∑–∫–µ –∫–æ—à–µ–ª—å–∫–∞" });
  }
}
