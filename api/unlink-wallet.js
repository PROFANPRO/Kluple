// /pages/api/unlink-wallet.js
export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è" });
  }

  const { userId, wallet } = req.body;

  if (!userId || !wallet) {
    return res.status(400).json({ error: "–ù–µ —É–∫–∞–∑–∞–Ω userId –∏–ª–∏ wallet" });
  }

  try {
    // üîë –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø—Ä–∏–≤—è–∑–æ–∫ ‚Äî –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç (–¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –ª—É—á—à–µ –±–∞–∑–∞)
    if (!global.LINKED_WALLETS) global.LINKED_WALLETS = {};

    // –£–¥–∞–ª—è–µ–º –ø—Ä–∏–≤—è–∑–∫—É
    if (global.LINKED_WALLETS[userId] === wallet) {
      delete global.LINKED_WALLETS[userId];
    }

    console.log(`üîì –ö–æ—à–µ–ª—ë–∫ ${wallet} –æ—Ç–≤—è–∑–∞–Ω –æ—Ç userId ${userId}`);

    return res.status(200).json({ success: true, message: "–ö–æ—à–µ–ª—ë–∫ –æ—Ç–≤—è–∑–∞–Ω" });
  } catch (err) {
    console.error("unlink-wallet error:", err);
    return res.status(500).json({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤—è–∑–∫–µ –∫–æ—à–µ–ª—å–∫–∞" });
  }
}
